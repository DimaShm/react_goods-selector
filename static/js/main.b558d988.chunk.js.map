{"version":3,"sources":["App.tsx","goods.js","index.tsx"],"names":["goods","checkedGoods","App","state","selectGoodName","title","multiple","this","length","name","i","slice","makeName","className","Button","variant","type","onClick","setState","map","good","classNames","includes","event","li","currentTarget","closest","innerText","currentGood","split","push","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8RAQMA,EAAK,YCRI,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WDDEC,EAAyB,GA8BtB,IAAMC,EAAb,4MACEC,MAAQ,CACNC,eAAgB,MAChBC,MAAO,cACPC,UAAU,GAJd,4CAOE,WAAU,IAAD,OACP,EAAgCC,KAAKJ,MAA/BC,EAAN,EAAMA,eAAgBC,EAAtB,EAAsBA,MACdC,EAAaC,KAAKJ,MAAlBG,SAOR,OALIA,GAAYL,EAAaO,OAAS,IACpCH,EAAQ,eACRD,EAzCN,WACE,IAAIK,EAAO,GAMX,GAJ4B,IAAxBR,EAAaO,SACfC,EAAI,UAAMR,EAAa,GAAnB,gBAA6BA,EAAa,KAG5CA,EAAaO,OAAS,EAAG,CAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAaO,OAAQE,GAAK,EACxCA,IAAMT,EAAaO,OAAS,EAC9BC,GAAI,UAAOR,EAAaS,GAApB,SAEJD,GAAI,UAAOR,EAAaS,GAApB,MAIRD,EAAOA,EAAKE,MAAM,EAAGF,EAAKD,OAAS,GAGrC,OAAOC,EAsBcG,IAIjB,uBAAMC,UAAU,MAAhB,UACE,yBAAQA,UAAU,QAAlB,UACE,oBAAIA,UAAU,QAAd,mBACMT,EADN,YACwBC,KAGJ,KAAnBD,GAEG,cAACU,EAAA,EAAD,CACEC,QAAQ,SACRC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZd,eAAgB,GAChBC,MAAO,oBACPC,UAAU,IAEZL,EAAe,IATnB,sBAiBN,cAACa,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,SACLH,UAAU,QACVI,QAAS,WACP,EAAKC,SAAS,CACZd,eAAgB,GAChBC,MAAO,oBACPC,UAAU,KARhB,4BAeA,6BACGN,EAAMmB,KAAI,SAAAC,GAAI,OACb,qBAEEP,UAAWQ,IACT,OACA,CACE,eAAgBD,IAAShB,GACpBH,EAAaqB,SAASF,KANjC,UAUGA,EAEAA,IAAShB,IAAmBE,GAEzB,cAACQ,EAAA,EAAD,CACEC,QAAQ,SACRC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZd,eAAgB,GAChBC,MAAO,oBACPC,UAAU,IAEZL,EAAe,IATnB,qBAgBFmB,IAAShB,GAAkBE,IAEzB,cAACQ,EAAA,EAAD,CACEC,QAAQ,UACRC,KAAK,SACLC,QAAS,SAACM,GACR,EAAKL,SAAS,CACZd,eAAgBgB,EAChBf,MAAO,gBAET,IACMmB,EADUD,EAAME,cACHC,QAAQ,MAE3B,IAAiB,IAAbpB,GAAqBkB,GAAMA,EAAGG,UAAW,CAC3C,IAAMC,EAAcJ,EAAGG,UAAUE,MAAM,MAAM,GAExC5B,EAAaqB,SAASM,IACzB3B,EAAa6B,KAAKF,KAf1B,sBA/BCR,eA5DnB,GAAyBW,IAAMC,WEpC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b558d988.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bulma/css/bulma.min.css';\nimport { Button } from 'react-bootstrap';\nimport goodsFromServer from './goods';\n\nconst goods = [...goodsFromServer];\nlet checkedGoods: string[] = [];\n\nfunction makeName() {\n  let name = '';\n\n  if (checkedGoods.length === 2) {\n    name = `${checkedGoods[0]} and ${checkedGoods[1]}`;\n  }\n\n  if (checkedGoods.length > 2) {\n    for (let i = 0; i < checkedGoods.length; i += 1) {\n      if (i === checkedGoods.length - 2) {\n        name += `${checkedGoods[i]} and `;\n      } else {\n        name += `${checkedGoods[i]}, `;\n      }\n    }\n\n    name = name.slice(0, name.length - 2);\n  }\n\n  return name;\n}\n\ntype State = {\n  selectGoodName: string,\n  title: string,\n  multiple: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectGoodName: 'Jam',\n    title: 'is selected',\n    multiple: false,\n  };\n\n  render() {\n    let { selectGoodName, title } = this.state;\n    const { multiple } = this.state;\n\n    if (multiple && checkedGoods.length > 1) {\n      title = 'are selected';\n      selectGoodName = makeName();\n    }\n\n    return (\n      <main className=\"App\">\n        <header className=\"level\">\n          <h1 className=\"title\">\n            {`${selectGoodName} ${title}`}\n          </h1>\n\n          {selectGoodName !== ''\n            && (\n              <Button\n                variant=\"danger\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState({\n                    selectGoodName: '',\n                    title: 'No goods selected',\n                    multiple: false,\n                  });\n                  checkedGoods = [];\n                }}\n              >\n                Clear\n              </Button>\n            )}\n        </header>\n\n        <Button\n          variant=\"success\"\n          type=\"button\"\n          className=\"level\"\n          onClick={() => {\n            this.setState({\n              selectGoodName: '',\n              title: 'No goods selected',\n              multiple: true,\n            });\n          }}\n        >\n          Multiple goods\n        </Button>\n\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'Good',\n                {\n                  'Good--active': good === selectGoodName\n                    || checkedGoods.includes(good),\n                },\n              )}\n            >\n              {good}\n\n              {good === selectGoodName && !multiple\n                && (\n                  <Button\n                    variant=\"danger\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.setState({\n                        selectGoodName: '',\n                        title: 'No goods selected',\n                        multiple: false,\n                      });\n                      checkedGoods = [];\n                    }}\n                  >\n                    Remove\n                  </Button>\n                )}\n\n              {(good !== selectGoodName || multiple)\n                && (\n                  <Button\n                    variant=\"primary\"\n                    type=\"button\"\n                    onClick={(event) => {\n                      this.setState({\n                        selectGoodName: good,\n                        title: 'is selected',\n                      });\n                      const element = event.currentTarget;\n                      const li = element.closest('li');\n\n                      if (multiple === true && li && li.innerText) {\n                        const currentGood = li.innerText.split('\\n')[0];\n\n                        if (!checkedGoods.includes(currentGood)) {\n                          checkedGoods.push(currentGood);\n                        }\n                      }\n                    }}\n                  >\n                    Select\n                  </Button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}